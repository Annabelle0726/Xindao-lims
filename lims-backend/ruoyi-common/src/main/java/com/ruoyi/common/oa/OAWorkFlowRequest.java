
package com.ruoyi.common.oa;



import com.ruoyi.common.utils.ApplicationContextHolder;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 *
 */
@WebServiceClient(name = "OA_WorkFlowRequest", targetNamespace = "http://tempuri.org/")
public class OAWorkFlowRequest
    extends Service
{

    private final static URL OAWORKFLOWREQUEST_WSDL_LOCATION;
    private final static WebServiceException OAWORKFLOWREQUEST_EXCEPTION;
    private final static QName OAWORKFLOWREQUEST_QNAME = new QName("http://tempuri.org/", "OA_WorkFlowRequest");

	static {
		URL url = null;
		WebServiceException e = null;
		try {
			OAProperty oaProperties = ApplicationContextHolder.getBean(OAProperty.class);
			url = new URL(oaProperties.getOaHost());
		} catch (MalformedURLException ex) {
			e = new WebServiceException(ex);
		}
		OAWORKFLOWREQUEST_WSDL_LOCATION = url;
		OAWORKFLOWREQUEST_EXCEPTION = e;
	}

    public OAWorkFlowRequest() {
        super(__getWsdlLocation(), OAWORKFLOWREQUEST_QNAME);
    }

    public OAWorkFlowRequest(WebServiceFeature... features) {
        super(__getWsdlLocation(), OAWORKFLOWREQUEST_QNAME, features);
    }

    public OAWorkFlowRequest(URL wsdlLocation) {
        super(wsdlLocation, OAWORKFLOWREQUEST_QNAME);
    }

    public OAWorkFlowRequest(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, OAWORKFLOWREQUEST_QNAME, features);
    }

    public OAWorkFlowRequest(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public OAWorkFlowRequest(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns OAWorkFlowRequestSoap
     */
    @WebEndpoint(name = "OA_WorkFlowRequestSoap")
    public OAWorkFlowRequestSoap getOAWorkFlowRequestSoap() {
        return super.getPort(new QName("http://tempuri.org/", "OA_WorkFlowRequestSoap"), OAWorkFlowRequestSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OAWorkFlowRequestSoap
     */
    @WebEndpoint(name = "OA_WorkFlowRequestSoap")
    public OAWorkFlowRequestSoap getOAWorkFlowRequestSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "OA_WorkFlowRequestSoap"), OAWorkFlowRequestSoap.class, features);
    }

    /**
     *
     * @return
     *     returns OAWorkFlowRequestSoap
     */
    @WebEndpoint(name = "OA_WorkFlowRequestSoap12")
    public OAWorkFlowRequestSoap getOAWorkFlowRequestSoap12() {
        return super.getPort(new QName("http://tempuri.org/", "OA_WorkFlowRequestSoap12"), OAWorkFlowRequestSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OAWorkFlowRequestSoap
     */
    @WebEndpoint(name = "OA_WorkFlowRequestSoap12")
    public OAWorkFlowRequestSoap getOAWorkFlowRequestSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "OA_WorkFlowRequestSoap12"), OAWorkFlowRequestSoap.class, features);
    }

    /**
     *
     * @return
     *     returns OAWorkFlowRequestHttpGet
     */
    @WebEndpoint(name = "OA_WorkFlowRequestHttpGet")
    public OAWorkFlowRequestHttpGet getOAWorkFlowRequestHttpGet() {
        return super.getPort(new QName("http://tempuri.org/", "OA_WorkFlowRequestHttpGet"), OAWorkFlowRequestHttpGet.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OAWorkFlowRequestHttpGet
     */
    @WebEndpoint(name = "OA_WorkFlowRequestHttpGet")
    public OAWorkFlowRequestHttpGet getOAWorkFlowRequestHttpGet(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "OA_WorkFlowRequestHttpGet"), OAWorkFlowRequestHttpGet.class, features);
    }

    /**
     *
     * @return
     *     returns OAWorkFlowRequestHttpPost
     */
    @WebEndpoint(name = "OA_WorkFlowRequestHttpPost")
    public OAWorkFlowRequestHttpPost getOAWorkFlowRequestHttpPost() {
        return super.getPort(new QName("http://tempuri.org/", "OA_WorkFlowRequestHttpPost"), OAWorkFlowRequestHttpPost.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns OAWorkFlowRequestHttpPost
     */
    @WebEndpoint(name = "OA_WorkFlowRequestHttpPost")
    public OAWorkFlowRequestHttpPost getOAWorkFlowRequestHttpPost(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "OA_WorkFlowRequestHttpPost"), OAWorkFlowRequestHttpPost.class, features);
    }

    private static URL __getWsdlLocation() {
        if (OAWORKFLOWREQUEST_EXCEPTION!= null) {
            throw OAWORKFLOWREQUEST_EXCEPTION;
        }
        return OAWORKFLOWREQUEST_WSDL_LOCATION;
    }

}
