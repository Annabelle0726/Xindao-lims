<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysUserMapper">

    <resultMap type="SysUser" id="SysUserResult">
        <id     property="userId"       column="id"      />
        <result property="deptId"       column="dept_id"      />
        <result property="userName"     column="account"    />
        <result property="nickName"     column="name"    />
        <result property="email"        column="email"        />
        <result property="phonenumber"  column="phone"  />
        <result property="sex"          column="sex"          />
        <result property="avatar"       column="avatar"       />
        <result property="password"     column="password"     />
        <result property="status"       column="status"       />
        <result property="delFlag"      column="del_flag"     />
        <result property="loginIp"      column="login_ip"     />
        <result property="loginDate"    column="login_date"   />
        <result property="createBy"     column="create_by"    />
        <result property="createTime"   column="create_time"  />
        <result property="updateBy"     column="update_by"    />
        <result property="updateTime"   column="update_time"  />
        <result property="remark"       column="remark"       />
        <result property="nameEn"       column="name_en"       />
        <result property="signatureUrl"       column="signature_url"       />
        <result property="pictureUrl"       column="picture_url"       />
        <result property="company"       column="company"       />
        <result property="roleName"       column="role_name"       />
        <association property="dept"    javaType="SysDept"         resultMap="deptResult" />
        <collection  property="roles"   javaType="java.util.List"  resultMap="RoleResult" />
    </resultMap>

    <resultMap id="deptResult" type="SysDept">
        <id     property="deptId"    column="dept_id"     />
        <result property="parentId"  column="parent_id"   />
        <result property="deptName"  column="dept_name"   />
        <result property="ancestors" column="ancestors"   />
        <result property="orderNum"  column="order_num"   />
        <result property="leader"    column="leader"      />
        <result property="status"    column="dept_status" />
    </resultMap>

    <resultMap id="RoleResult" type="SysRole">
        <id     property="roleId"       column="role_id"        />
        <result property="roleName"     column="role_name"      />
        <result property="roleKey"      column="role_key"       />
        <result property="roleSort"     column="role_sort"      />
        <result property="dataScope"    column="data_scope"     />
        <result property="status"       column="role_status"    />
    </resultMap>

	<sql id="selectUserVo">
        select u.id, u.dept_id, u.account, u.name, u.email, u.picture_url, u.phone, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, u.name_en, u.signature_url, u.company,
        d.dept_id, d.parent_id, d.ancestors, d.dept_name, d.order_num, d.leader, d.status as dept_status,
        r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from user u
		    left join sys_dept d on u.dept_id = d.dept_id
		    left join sys_user_role ur on u.id = ur.user_id
		    left join sys_role r on r.role_id = ur.role_id
    </sql>

    <select id="selectUserList" parameterType="SysUser" resultMap="SysUserResult">
		select u.id,
		u.dept_id,
		u.name,
		u.account,
		u.email,
		u.picture_url,
		u.phone,
		u.sex,
		u.status,
		u.del_flag,
		u.login_ip,
		u.login_date,
		u.create_by,
		u.create_time,
		u.remark,
		d.dept_name,
		d.leader,
		GROUP_CONCAT(DISTINCT sr.role_name SEPARATOR ',') AS role_name
		from user u
		left join sys_dept d on u.dept_id = d.dept_id
		left join sys_user_role sur on sur.user_id = u.id
		left join sys_role sr on sr.role_id = sur.role_id
		where u.del_flag = '0'
		<if test="userId != null and userId != 0">
			AND u.id = #{userId}
		</if>
		<if test="userName != null and userName != ''">
			AND u.account like concat('%', #{userName}, '%')
		</if>
		<if test="nickName != null and nickName != ''">
			AND u.name like concat('%', #{nickName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phone like concat('%', #{phonenumber}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%Y%m%d') &gt;= date_format(#{params.beginTime},'%Y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%Y%m%d') &lt;= date_format(#{params.endTime},'%Y%m%d')
		</if>
		<if test="deptId != null and deptId != 0">
			AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId}, ancestors) ))
		</if>
		group by u.id
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectAllocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.id, u.dept_id, u.account, u.name, u.email, u.phone, u.status, u.create_time
	    from user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and r.role_id = #{roleId}
	    <if test="userName != null and userName != ''">
			AND u.account like concat('%', #{userName}, '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phone like concat('%', #{phonenumber}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectUnallocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.id, u.dept_id, u.account, u.name, u.email, u.phone, u.status, u.create_time
	    from user u
			 left join sys_dept d on u.dept_id = d.dept_id
			 left join sys_user_role ur on u.id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
	    and u.id not in (select u.id from user u inner join sys_user_role ur on u.id = ur.user_id and ur.role_id = #{roleId})
	    <if test="userName != null and userName != ''">
			AND u.account like concat('%', #{userName}, '%')
		</if>
		<if test="phonenumber != null and phonenumber != ''">
			AND u.phone like concat('%', #{phonenumber}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>

	<select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		where u.account = #{userName} and u.del_flag = '0'
	</select>

	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.id = #{userId}
	</select>

	<select id="checkUserNameUnique" parameterType="String" resultMap="SysUserResult">
		select id, account from user where account = #{userName} and del_flag = '0' limit 1
	</select>

	<select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		select id, phone from user where phone = #{phonenumber} and del_flag = '0' limit 1
	</select>

	<select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		select id, email from user where email = #{email} and del_flag = '0' limit 1
	</select>

	<insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
 		insert into user(
 			<if test="userId != null and userId != 0">id,</if>
 			<if test="deptId != null and deptId != 0">dept_id,</if>
 			<if test="userName != null and userName != ''">account,</if>
 			<if test="nickName != null and nickName != ''">`name`,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="avatar != null and avatar != ''">avatar,</if>
 			<if test="phonenumber != null and phonenumber != ''">phone,</if>
 			<if test="sex != null and sex != ''">sex,</if>
 			<if test="password != null and password != ''">password,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			<if test="nameEn != null and nameEn != ''">name_en,</if>
 			<if test="signatureUrl != null and signatureUrl != ''">signature_url,</if>
 			<if test="company != null and company != ''">company,</if>
 			create_time
 		)values(
 			<if test="userId != null and userId != ''">#{userId},</if>
 			<if test="deptId != null and deptId != ''">#{deptId},</if>
 			<if test="userName != null and userName != ''">#{userName},</if>
 			<if test="nickName != null and nickName != ''">#{nickName},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="avatar != null and avatar != ''">#{avatar},</if>
 			<if test="phonenumber != null and phonenumber != ''">#{phonenumber},</if>
 			<if test="sex != null and sex != ''">#{sex},</if>
 			<if test="password != null and password != ''">#{password},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			<if test="nameEn != null and nameEn != ''">#{nameEn},</if>
 			<if test="signatureUrl != null and signatureUrl != ''">#{signatureUrl},</if>
 			<if test="company != null and company != ''">#{company},</if>
 			sysdate()
 		)
	</insert>

	<update id="updateUser" parameterType="SysUser">
 		update user
 		<set>
 			<if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
 			<if test="userName != null and userName != ''">account = #{userName},</if>
 			<if test="nickName != null and nickName != ''">`name` = #{nickName},</if>
 			<if test="email != null ">email = #{email},</if>
 			<if test="phonenumber != null ">phone = #{phonenumber},</if>
 			<if test="sex != null and sex != ''">sex = #{sex},</if>
 			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
 			<if test="password != null and password != ''">password = #{password},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
 			<if test="loginDate != null">login_date = #{loginDate},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			<if test="remark != null">remark = #{remark},</if>
			<if test="nameEn != null and nameEn != ''">name_en = #{nameEn},</if>
			<if test="signatureUrl != null and signatureUrl != ''">signature_url = #{signatureUrl},</if>
			<if test="pictureUrl != null and pictureUrl != ''">picture_url = #{pictureUrl},</if>
			<if test="company != null and company != ''">company = #{company},</if>
 			update_time = sysdate()
 		</set>
 		where id = #{userId}
	</update>

	<update id="updateUserStatus" parameterType="SysUser">
 		update user set status = #{status} where id = #{userId}
	</update>

	<update id="updateUserAvatar" parameterType="SysUser">
 		update user set avatar = #{avatar} where account = #{userName}
	</update>

	<update id="resetUserPwd" parameterType="SysUser">
 		update user set password = #{password} where account = #{userName}
	</update>

	<delete id="deleteUserById" parameterType="Long">
 		update user set del_flag = '2' where id = #{userId}
 	</delete>

 	<delete id="deleteUserByIds" parameterType="Long">
 		update user set del_flag = '2' where id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach>
 	</delete>

</mapper>
